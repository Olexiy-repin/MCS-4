/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getRectArea(dimensions) –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
? –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –±—É–¥–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ dimensions —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
? –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
*/

// const getRectArea = function (dimensions) {
//   const rectSidesArr = dimensions.split(' ');

//   console.log(rectSidesArr);

//   return Number(rectSidesArr[0]) * Number(rectSidesArr[1]);
// };

// console.log(getRectArea('8 11')); // 88
// console.log(getRectArea('18 11')); // 198
// console.log(getRectArea('8 21')); // 168

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
? —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
? —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
? –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
?
? –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
? —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
*/

// const logItems = function (items) {
//   console.log(items);

//   for (let i = 0; i < items.length; i++) {
//     console.log(`${i + 1} - ${items[i]}`);
//   }
// };

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
? —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
? names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
? —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
? –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
? –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
*/

// function printInfo(names, phones) {
//   names = names.split(',');
//   phones = phones.split(',');

//   console.log(names);
//   console.log(phones);

//   for (let i = 0; i < names.length; i++) {
//     console.log(`${names[i]} : ${phones[i]}`);
//   }
// }

// printInfo(
//   'Jacob,William,Solomon,Artemis',
//   '89001234567,89001112233,890055566377,890055566300'
// );

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
? minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
? —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
*/

//? –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è if(){}
// function formatTime(minutes) {
//   let hours = Math.floor(minutes / 60);
//   let remainderMinutes = minutes % 60;

//   console.log(hours);
//   console.log(remainderMinutes);

//   if (hours < 10) {
//     hours = '0' + String(hours);
//   }

//   if (remainderMinutes < 10) {
//     remainderMinutes = '0' + String(remainderMinutes);
//   }

//   return `${hours}:${remainderMinutes}`;
// }

// console.log(formatTime(79)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

//? –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ä—è–¥–∫–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É padStart().
// function formatTime(minutes) {
//   let hours = Math.floor(minutes / 60);
//   let remainderMinutes = minutes % 60;

//   console.log(hours);
//   console.log(remainderMinutes);

//   hours = String(hours).padStart(2, '0');
//   remainderMinutes = String(remainderMinutes).padStart(2, '0');

//   return `${hours}:${remainderMinutes}`;
// }

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

/*
? –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ courses:
? addCourse(courseName) - –¥–æ–¥–∞—î –∫—É—Ä—Å –≤ –∫—ñ–Ω–µ—Ü—å –∫–æ–ª–µ–∫—Ü—ñ—ó
? removeCourse(courseName) - –≤–∏–¥–∞–ª—è—î –∫—É—Ä—Å –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
? updateCourse(oldCourseName, newCourseName) - –∑–º—ñ–Ω—é—î –Ω–∞–∑–≤—É –∫—É—Ä—Å–∞
*/

const courses = ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL'];

console.log(courses);

const addCourse = function (courseName) {
  if (courses.includes(courseName)) {
    console.log(`–£ –≤–∞—Å –≤–∂–µ —î –∫—É—Ä—Å ${courseName}`);

    return;
  }

  courses.push(courseName);
};

const removeCourse = function (courseName) {
  const idxOfCourse = courses.indexOf(courseName);

  if (idxOfCourse === -1) {
    console.log(`–ö—É—Ä—Å –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);

    return;
  }

  courses.splice(idxOfCourse, 1);
};

const updateCourse = function (oldCourseName, newCourseName) {
  const idxOfCourse = courses.indexOf(oldCourseName);

  courses.splice(idxOfCourse, 1, newCourseName);
};

addCourse('Express');
console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
addCourse('CSS'); // '–£ –≤–∞—Å –≤–∂–µ —î —Ç–∞–∫–∏–π –∫—É—Ä—Å'

removeCourse('React');
console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
removeCourse('React'); // '–ö—É—Ä—Å –∑ —Ç–∞–∫–æ—é –Ω–∞–∑–≤–æ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

updateCourse('Express', 'NestJS');
console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é checkCaseOfLetter(letter), —è–∫–∞ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —Ä–µ–≥—ñ—Å—Ç—Ä –ª—ñ—Ç–µ—Ä–∏.
? –í –ø–∞—Ä–∞–º–µ—Ç—Ä letter –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Ä—è–¥–æ–∫ —ñ–∑ –æ–¥–Ω—ñ—î—é –ª—ñ—Ç–µ—Ä–æ—é.
? –Ø–∫—â–æ –ª—ñ—Ç–µ—Ä–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –≤–µ—Ä—Ö–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, —Ç–æ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏—Å—è 'upper case' —ñ–Ω–∞–∫—à–µ 'lower case'.
*/

// function checkCaseOfLetter(letter) {}

// console.log(checkCaseOfLetter('a')); // 'lower case'
// console.log(checkCaseOfLetter('A')); // 'upper case'

/*
? –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é changeCaseOfLetters(str), —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—è–¥–æ–∫ —ñ–∑ –∑–º—ñ–Ω–µ–Ω–∏–º —Ä–µ–≥—ñ—Å—Ç—Ä–æ–º –ª—ñ—Ç–µ—Ä.
? –í –ø–∞—Ä–∞–º–µ—Ç—Ä str –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ —Ä—è–¥–æ–∫.
*/

// function changeCaseOfLetters(str) {}

// console.log(changeCaseOfLetters('AbCdE')); // aBcDe
// console.log(changeCaseOfLetters('abc')); // ABC
// console.log(changeCaseOfLetters('CBA')); // cba
